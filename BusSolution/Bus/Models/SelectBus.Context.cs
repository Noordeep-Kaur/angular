//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bus.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BusReservationEntities : DbContext
    {
        public BusReservationEntities()
            : base("name=BusReservationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<BusDetail> BusDetails { get; set; }
        public virtual DbSet<DriverDetail> DriverDetails { get; set; }
        public virtual DbSet<GuestUserDetail> GuestUserDetails { get; set; }
        public virtual DbSet<JourneyRoute> JourneyRoutes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<TransactionDetail> TransactionDetails { get; set; }
        public virtual DbSet<Trip> Trips { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<PassengerDetail> PassengerDetails { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<proc_GetBus_Result> proc_GetBus(string fromlocation, string tolocation, Nullable<System.DateTime> fromdate)
        {
            var fromlocationParameter = fromlocation != null ?
                new ObjectParameter("fromlocation", fromlocation) :
                new ObjectParameter("fromlocation", typeof(string));
    
            var tolocationParameter = tolocation != null ?
                new ObjectParameter("tolocation", tolocation) :
                new ObjectParameter("tolocation", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetBus_Result>("proc_GetBus", fromlocationParameter, tolocationParameter, fromdateParameter);
        }
    
        public virtual ObjectResult<proc_Bus_Result> proc_Bus(string fromlocation, string tolocation, Nullable<System.DateTime> fromdate)
        {
            var fromlocationParameter = fromlocation != null ?
                new ObjectParameter("fromlocation", fromlocation) :
                new ObjectParameter("fromlocation", typeof(string));
    
            var tolocationParameter = tolocation != null ?
                new ObjectParameter("tolocation", tolocation) :
                new ObjectParameter("tolocation", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Bus_Result>("proc_Bus", fromlocationParameter, tolocationParameter, fromdateParameter);
        }
    
        public virtual ObjectResult<proc_Buses_Result> proc_Buses(Nullable<int> tripID, Nullable<System.DateTime> fromdate)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("tripID", tripID) :
                new ObjectParameter("tripID", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Buses_Result>("proc_Buses", tripIDParameter, fromdateParameter);
        }
    
        public virtual ObjectResult<proc_Wallet_Result> proc_Wallet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Wallet_Result>("proc_Wallet", idParameter);
        }
    
        public virtual ObjectResult<proc_Profile_Result> proc_Profile(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Profile_Result>("proc_Profile", idParameter);
        }
    
        public virtual ObjectResult<proc_cancel_Result> proc_cancel(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_cancel_Result>("proc_cancel", idParameter);
        }
    
        public virtual ObjectResult<proc_current_Result> proc_current(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_current_Result>("proc_current", idParameter);
        }
    
        public virtual ObjectResult<proc_curent_Result> proc_curent(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_curent_Result>("proc_curent", idParameter);
        }
    
        public virtual ObjectResult<proc_currentbooking_Result> proc_currentbooking(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_currentbooking_Result>("proc_currentbooking", idParameter);
        }
    
        public virtual ObjectResult<proc_previous_Result> proc_previous(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_previous_Result>("proc_previous", idParameter);
        }
    
        public virtual int postGuestUserDetails(string fname, string lname, string email, string pnumber)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var pnumberParameter = pnumber != null ?
                new ObjectParameter("pnumber", pnumber) :
                new ObjectParameter("pnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("postGuestUserDetails", fnameParameter, lnameParameter, emailParameter, pnumberParameter);
        }
    
        public virtual ObjectResult<proc_fetchUserId_Result> proc_fetchUserId(string emailid)
        {
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_fetchUserId_Result>("proc_fetchUserId", emailidParameter);
        }
    
        public virtual int proc_insertGuestUserID(string fname, string lname, string email, string pnumber)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var pnumberParameter = pnumber != null ?
                new ObjectParameter("pnumber", pnumber) :
                new ObjectParameter("pnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insertGuestUserID", fnameParameter, lnameParameter, emailParameter, pnumberParameter);
        }
    
        public virtual ObjectResult<get_BusID_Result> get_BusID(string fromloc, string toloc)
        {
            var fromlocParameter = fromloc != null ?
                new ObjectParameter("fromloc", fromloc) :
                new ObjectParameter("fromloc", typeof(string));
    
            var tolocParameter = toloc != null ?
                new ObjectParameter("toloc", toloc) :
                new ObjectParameter("toloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_BusID_Result>("get_BusID", fromlocParameter, tolocParameter);
        }
    
        public virtual ObjectResult<get_BusIDValue_Result> get_BusIDValue(string fromloc, string toloc)
        {
            var fromlocParameter = fromloc != null ?
                new ObjectParameter("fromloc", fromloc) :
                new ObjectParameter("fromloc", typeof(string));
    
            var tolocParameter = toloc != null ?
                new ObjectParameter("toloc", toloc) :
                new ObjectParameter("toloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_BusIDValue_Result>("get_BusIDValue", fromlocParameter, tolocParameter);
        }
    
        public virtual ObjectResult<get_PickupLocations_Result> get_PickupLocations(Nullable<int> tid, string toLocation, Nullable<System.DateTime> fromDate)
        {
            var tidParameter = tid.HasValue ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(int));
    
            var toLocationParameter = toLocation != null ?
                new ObjectParameter("toLocation", toLocation) :
                new ObjectParameter("toLocation", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_PickupLocations_Result>("get_PickupLocations", tidParameter, toLocationParameter, fromDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_Wallet(Nullable<int> id, string gender)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_Wallet", idParameter, genderParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_WalletDetail(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_WalletDetail", idParameter);
        }
    
        public virtual ObjectResult<proc_ForgotPassword_Result> proc_ForgotPassword()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ForgotPassword_Result>("proc_ForgotPassword");
        }
    
        public virtual ObjectResult<proc_getWallet_Result> proc_getWallet(Nullable<int> id, string gender)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_getWallet_Result>("proc_getWallet", idParameter, genderParameter);
        }
    
        public virtual ObjectResult<proc_GuestUserDetail_Result> proc_GuestUserDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GuestUserDetail_Result>("proc_GuestUserDetail");
        }
    
        public virtual int proc_Register(string firstName, string lastName, string emailId, string phoneNumber, string password, string gender, Nullable<System.DateTime> dOB, string address, string state, string city, Nullable<int> pincode, string securityQuestion)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(int));
    
            var securityQuestionParameter = securityQuestion != null ?
                new ObjectParameter("SecurityQuestion", securityQuestion) :
                new ObjectParameter("SecurityQuestion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Register", firstNameParameter, lastNameParameter, emailIdParameter, phoneNumberParameter, passwordParameter, genderParameter, dOBParameter, addressParameter, stateParameter, cityParameter, pincodeParameter, securityQuestionParameter);
        }
    
        public virtual ObjectResult<proc_TicketDetails_Result> proc_TicketDetails(Nullable<int> bookingID)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_TicketDetails_Result>("proc_TicketDetails", bookingIDParameter);
        }
    
        public virtual ObjectResult<proc_UserLogin3_Result> proc_UserLogin3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_UserLogin3_Result>("proc_UserLogin3");
        }
    
        public virtual ObjectResult<proc_UserRegistration2_Result> proc_UserRegistration2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_UserRegistration2_Result>("proc_UserRegistration2");
        }
    
        public virtual int proc_dropColumn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_dropColumn");
        }
    
        public virtual int proc_GuestUserID(string fname, string lname, string email, string pnumber)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var pnumberParameter = pnumber != null ?
                new ObjectParameter("pnumber", pnumber) :
                new ObjectParameter("pnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_GuestUserID", fnameParameter, lnameParameter, emailParameter, pnumberParameter);
        }
    
        public virtual int proc_addTicketDetails(Nullable<int> bid, Nullable<int> buid, string fromloc, string toloc, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<System.TimeSpan> fromTime, Nullable<System.TimeSpan> toTime, Nullable<int> seats, Nullable<int> fare)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var buidParameter = buid.HasValue ?
                new ObjectParameter("buid", buid) :
                new ObjectParameter("buid", typeof(int));
    
            var fromlocParameter = fromloc != null ?
                new ObjectParameter("fromloc", fromloc) :
                new ObjectParameter("fromloc", typeof(string));
    
            var tolocParameter = toloc != null ?
                new ObjectParameter("toloc", toloc) :
                new ObjectParameter("toloc", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var fromTimeParameter = fromTime.HasValue ?
                new ObjectParameter("fromTime", fromTime) :
                new ObjectParameter("fromTime", typeof(System.TimeSpan));
    
            var toTimeParameter = toTime.HasValue ?
                new ObjectParameter("toTime", toTime) :
                new ObjectParameter("toTime", typeof(System.TimeSpan));
    
            var seatsParameter = seats.HasValue ?
                new ObjectParameter("seats", seats) :
                new ObjectParameter("seats", typeof(int));
    
            var fareParameter = fare.HasValue ?
                new ObjectParameter("fare", fare) :
                new ObjectParameter("fare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_addTicketDetails", bidParameter, buidParameter, fromlocParameter, tolocParameter, fromDateParameter, todateParameter, fromTimeParameter, toTimeParameter, seatsParameter, fareParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_getBusId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_getBusId", idParameter);
        }
    
        public virtual ObjectResult<proc_getIdOfBus_Result> proc_getIdOfBus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_getIdOfBus_Result>("proc_getIdOfBus", idParameter);
        }
    }
}
